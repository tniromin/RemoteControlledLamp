
LED DemoC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000190  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000778  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000069c  00000000  00000000  00000978  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ee  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001304  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038f  00000000  00000000  00001348  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  000016d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000171f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <setPin>:
#include <util/delay.h>

#define F_CPU 16000000UL

void setPin(){
	OCR2A = 0 ;
  80:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	OCR0A = 0 ;
  84:	17 bc       	out	0x27, r1	; 39
	OCR0B = 255 ;
  86:	8f ef       	ldi	r24, 0xFF	; 255
  88:	88 bd       	out	0x28, r24	; 40
	OCR2B = 255;
  8a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
  8e:	08 95       	ret

00000090 <initPWM>:
}


void initPWM(){
	// Reset Timer registers to 0
	TCCR0A = 0;
  90:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0;
  92:	15 bc       	out	0x25, r1	; 37
	TCCR2A = 0;
  94:	a0 eb       	ldi	r26, 0xB0	; 176
  96:	b0 e0       	ldi	r27, 0x00	; 0
  98:	1c 92       	st	X, r1
	TCCR2B = 0;
  9a:	e1 eb       	ldi	r30, 0xB1	; 177
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	10 82       	st	Z, r1
	
	// Set Pins to Output
	DDRD |= _BV(DDD5); //5
  a0:	8a b1       	in	r24, 0x0a	; 10
  a2:	80 62       	ori	r24, 0x20	; 32
  a4:	8a b9       	out	0x0a, r24	; 10
	DDRD |= _BV(DDD6); //6
  a6:	8a b1       	in	r24, 0x0a	; 10
  a8:	80 64       	ori	r24, 0x40	; 64
  aa:	8a b9       	out	0x0a, r24	; 10
	DDRD |= _BV(DDD3); //3
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	88 60       	ori	r24, 0x08	; 8
  b0:	8a b9       	out	0x0a, r24	; 10
	DDRB |= _BV(DDB3); //11
  b2:	84 b1       	in	r24, 0x04	; 4
  b4:	88 60       	ori	r24, 0x08	; 8
  b6:	84 b9       	out	0x04, r24	; 4
	
	// TCCR0A [ COM0A1 COM0A0 COM0B1 COM0B0 0 0 WGM01 WGM00 ] = 0b10110011
	TCCR0A = _BV(COM0A1) | _BV(COM0B1) | _BV(WGM01) | _BV(WGM00);
  b8:	93 ea       	ldi	r25, 0xA3	; 163
  ba:	94 bd       	out	0x24, r25	; 36

	// TCCR0B [ FOC2A FOC2B 0 0 WGM02 CS02 CS01 CS00 ] = 0b00000011
	TCCR0B = _BV(CS01) | _BV(CS00);
  bc:	83 e0       	ldi	r24, 0x03	; 3
  be:	85 bd       	out	0x25, r24	; 37
	
	// For Pin set 3 and 11
	TCCR2A = _BV(COM2A1) | _BV(COM2B1) | _BV(WGM21) | _BV(WGM20);
  c0:	9c 93       	st	X, r25
	TCCR2B = _BV(CS21) | _BV(CS20);
  c2:	80 83       	st	Z, r24
  c4:	08 95       	ret

000000c6 <main>:
	
}

int main(void)
{	
	initPWM();
  c6:	0e 94 48 00 	call	0x90	; 0x90 <initPWM>
	// Completely Disconnects Pin3 [PD3 - OC2B]
	TCCR2A &= ~(_BV(COM2B1));
  ca:	e0 eb       	ldi	r30, 0xB0	; 176
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	8f 7d       	andi	r24, 0xDF	; 223
  d2:	80 83       	st	Z, r24

    /* Replace with your application code */
    while (1) 
    {	
		setPin();
  d4:	0e 94 40 00 	call	0x80	; 0x80 <setPin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d8:	2f ef       	ldi	r18, 0xFF	; 255
  da:	87 ea       	ldi	r24, 0xA7	; 167
  dc:	91 e6       	ldi	r25, 0x61	; 97
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x18>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x22>
  e8:	00 00       	nop
		_delay_ms(2000);
		TCCR2A |= _BV(COM2B1);
  ea:	e0 eb       	ldi	r30, 0xB0	; 176
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	80 83       	st	Z, r24
  f4:	2f ef       	ldi	r18, 0xFF	; 255
  f6:	87 ea       	ldi	r24, 0xA7	; 167
  f8:	91 e6       	ldi	r25, 0x61	; 97
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	80 40       	sbci	r24, 0x00	; 0
  fe:	90 40       	sbci	r25, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <main+0x34>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x3e>
 104:	00 00       	nop
 106:	e6 cf       	rjmp	.-52     	; 0xd4 <main+0xe>

00000108 <_exit>:
 108:	f8 94       	cli

0000010a <__stop_program>:
 10a:	ff cf       	rjmp	.-2      	; 0x10a <__stop_program>
